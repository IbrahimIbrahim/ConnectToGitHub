Generating RSA Keys Locally (i.e., the client)
----------------------------------------------
1) Type in the command line:
      $ mkdir ~/.ssh
      $ chmod 700 ~/.ssh
    # Creates a directory for RSA Keys.

      $ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
    # Creates a new ssh key, using the provided email as a label.

2) Enter the name of the file you are creating (i.e., mylocalgit).

3) Enter the passphrase when prompted.
    # This passphrase will protect your private key while it's stored on the hard drive.
    
      $ ls -al ~/.ssh
    # Checks for existing SSH keys on your computer and lists the files in your .ssh directory.
    
4) Add your key to the ssh-agent:
    # ssh-agent provides a secure way of storing the private key. For private keys that require a passphrase, 
    # allows the user to connect multiple times without having to repeatedly type the passphrase.
      
      $ eval "$(ssh-agent -s)"
    # starts the ssh-agent in the background.
      
      $ ssh-add mylocalgit
    # Adds your generated SSH key to the ssh-agent.
    
5) Add your SSH key to your account:
    # Using a text editor, open the ~/.ssh/id_rsa.pub (or as in our case here /mylocalgit.pub) file.
    # Select the entire contents of the file and copy it to your clipboard.
    # Paste your key into the "Key" field in your GitHub account. 
    
6) Test the conncetion:
      $ ssh -T git@github.com
    # Verify the fingerprint you receive, it should be:
    # RSA key fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
    # You can also be more assured whether if the username in the message is yours, 
    # if yes, then you've successfully set up your SSH key!
    
    
